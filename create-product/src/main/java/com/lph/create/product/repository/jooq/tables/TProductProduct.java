/*
 * This file is generated by jOOQ.
 */
package com.lph.create.product.repository.jooq.tables;


import com.lph.create.product.repository.jooq.DefaultSchema;
import com.lph.create.product.repository.jooq.Indexes;
import com.lph.create.product.repository.jooq.Keys;
import com.lph.create.product.repository.jooq.tables.records.TProductProductRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductProduct extends TableImpl<TProductProductRecord> {

    private static final long serialVersionUID = 381586600;

    /**
     * The reference instance of <code>t_product_product</code>
     */
    public static final TProductProduct T_PRODUCT_PRODUCT = new TProductProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductProductRecord> getRecordType() {
        return TProductProductRecord.class;
    }

    /**
     * The column <code>t_product_product.id</code>.
     */
    public final TableField<TProductProductRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>t_product_product.name</code>.
     */
    public final TableField<TProductProductRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>t_product_product</code> table reference
     */
    public TProductProduct() {
        this(DSL.name("t_product_product"), null);
    }

    /**
     * Create an aliased <code>t_product_product</code> table reference
     */
    public TProductProduct(String alias) {
        this(DSL.name(alias), T_PRODUCT_PRODUCT);
    }

    /**
     * Create an aliased <code>t_product_product</code> table reference
     */
    public TProductProduct(Name alias) {
        this(alias, T_PRODUCT_PRODUCT);
    }

    private TProductProduct(Name alias, Table<TProductProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductProduct(Name alias, Table<TProductProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TProductProduct(Table<O> child, ForeignKey<O, TProductProductRecord> key) {
        super(child, key, T_PRODUCT_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_PRODUCT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductProductRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_PRODUCT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductProductRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductProductRecord>>asList(Keys.KEY_T_PRODUCT_PRODUCT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductProduct as(String alias) {
        return new TProductProduct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductProduct as(Name alias) {
        return new TProductProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductProduct rename(String name) {
        return new TProductProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductProduct rename(Name name) {
        return new TProductProduct(name, null);
    }
}
